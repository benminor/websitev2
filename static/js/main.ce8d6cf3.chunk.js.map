{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","maxWidth","maxHeight","minHeight","margin","secondary","root2","secondary2","cardStyle","backgroundColor","cardStyle2","typoGStyle","fontFamily","fontWeight","fontSize","color","popoverFont2","popoverStyle","ImgMediaCard","classes","React","useState","anchorEl","setAnchorEl","anchorEl2","setAnchorEl2","anchorEl3","setAnchorEl3","handleClose","open","Boolean","open2","open3","id","undefined","class","Card","className","style","CardActionArea","CardContent","Typography","aria-describedby","variant","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce8d6cf3.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Popover from '@material-ui/core/Popover';\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    maxWidth: 300,\n    maxHeight: 150,\n    minHeight: 150,\n    margin: 15,\n  },\n\n  secondary :{\n    minWidth: 300,\n    maxWidth: 300,\n    maxHeight: 150,\n    minHeight: 150,\n    margin: 0,\n  },\n\n  root2 : {\n    minWidth: 130,\n    maxWidth: 130,\n    maxHeight: 60,\n    minHeight: 60,\n    margin: 15,\n  },\n\n  secondary2 :{\n    minWidth: 130,\n    maxWidth: 130,\n    maxHeight: 60,\n    minHeight: 60,\n    margin: 0,\n  }\n  \n});\n\nconst cardStyle = {\n  backgroundColor: \"#519162\",\n}\n\nconst cardStyle2 = {\n  backgroundColor: \"#3a3a3a\",\n}\n\n\nconst typoGStyle = {\n  fontFamily: \"Yeseva One\",\n  fontWeight: 300,\n  fontSize: \"29px\",\n  color: \"white\",\n}\n\nconst popoverFont2 = {\n  fontFamily: \"Yeseva One\",\n  fontSize: \"20px\",\n  color: \"white\",\n}\n\n\nconst popoverStyle = {\n  minWidth: 1000,\n  minHeight: 1000,\n}\n\nexport default function ImgMediaCard() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [anchorEl2, setAnchorEl2] = React.useState(null);\n  const [anchorEl3, setAnchorEl3] = React.useState(null);\n\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClick2 = (event) => {\n    setAnchorEl2(event.currentTarget);\n  };\n\n  const handleClick3 = (event) => {\n    setAnchorEl3(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setAnchorEl2(null);\n    setAnchorEl3(null);\n\n  };\n\n  const open = Boolean(anchorEl);\n  const open2 = Boolean(anchorEl2);\n  const open3 = Boolean(anchorEl3);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    \n    <div class = \"all\">\n      \n      <div class = \"main-div\">\n        <div class=\"typewriter\">\n          <h1>Hi, I'm Ben.</h1>\n        </div>\n        <h2>I'm a 3rd year Computing student at Queen's University.</h2>\n        <div class=\"resume-div\"> \n\n        <Card className={classes.root2} style={cardStyle2}>\n            <CardActionArea className={classes.secondary2} >\n              <CardContent>\n                <Typography style={popoverFont2}>Resume</Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </div>\n    \n        <br></br>\n       \n        <div class = \"card-div\">\n\n          <Card className={classes.root} style={cardStyle}>\n            <CardActionArea className={classes.secondary} aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\n              <CardContent>\n                <Typography style={typoGStyle}>Work Experience</Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n\n          <Card className={classes.root} style={cardStyle}>\n            <CardActionArea className={classes.secondary} aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick2}>\n              <CardContent>\n                <Typography style={typoGStyle}>Education</Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n\n          <Card className={classes.root} style={cardStyle} aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick3}>\n            <CardActionArea className={classes.secondary}>\n              <CardContent>\n                <Typography style={typoGStyle}>Personal Projects</Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n\n\n        </div>\n      </div>\n      <div>\n \n      <Popover\n        id={id}\n        style={popoverStyle}\n        open={open}\n        //anchorEl={anchorEl}\n\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        >\n          <div class = \"popover-class\">\n          <h2>My Work Experience</h2>\n          <hr></hr>\n          <h4>Software Developer @ Queen's Media & Technology</h4>\n            <h5>March 2020 - Present</h5>\n              <p>\n                - Developing an innovative COVID-19 contact tracing mobile app using React Native, Firebase Database, and Git version control\n                <br></br>\n                - Weekly meetings with a full product team to iterate through developmental and design ideas.\n              </p>\n                \n\n          <br></br>\n          <h4>Finance Director @ Queen's Pre-Dental Society</h4>\n            <h5>March 2020 - Present</h5>\n              <p>\n                - Directly in charge of allocating club funds and managing the budget\n                <br></br>\n                - Helped secure funding from notable DAT resource company, DAT Crusher\n                <br></br>\n                - Developed and am solely in charge of the club website\n                \n              </p>\n\n          <br></br>\n          <h4>Technical Consultant (Internship) @ Framework Venture Partners</h4>\n            <h5>September 2020 - December 2020</h5>\n              <p>\n                - Maintained and updated the software platforms I built during my summer internship, including an external web application and an internal data scraper\n                <br></br>\n                - Developed internal software programs to automate manual MS Excel entry using Python\n              </p>\n\n          <br></br>\n          <h4>Developer & Analyst (Internship) @ Framework Venture Partners</h4>\n            <h5>May 2020 - September 2020</h5>\n              <p>\n                - Built an automated Python based data parser to aggregate portfolio data from over 300 investment funds\n                using Firebase Realtime Database, AWS Lightsail, and Git version control\n                <br></br>\n                - Managed a junior team member who assisted me in full-stack web development of our start-up feedback form\n                <br></br>\n                - Automated Salesforce integration tasks using Salesforce REST API in Python which saved team members hours\n                of manual entry and calculation per week\n                <br></br>\n                - Performed 100+ one-on-one meetings with CEOs of Series A, and Series B software and FinTech start-ups to\n                analyze financial metrics to determine if an investment strategy exists\n                <br></br>\n                - Contributed to investment decks for our portfolio companies to analyze aspects such as the competitive\n                landscape, total addressable market size, and unit economics\n              </p>\n\n              <br></br>\n\n          <h4>Computer Technician (Internship) @ DCR Systems Group</h4>\n            <h5>May 2019 - August 2019</h5>\n              <p>\n                - Configured, installed, and updated internal software and hardware resources for notable accounting firms, law\n                firms, and international schools\n                <br></br>\n                - Performed PC cloning/imaging with Symantec Ghost and Paragon Disk Manager\n                <br></br>\n                - Worked efficiently and cooperatively in 6 person team to meet strict contractual deadlines\n              </p>\n       \n       \n          </div>\n      </Popover>\n\n      <Popover\n        id={id}\n        style={popoverStyle}\n        open={open2}\n        //anchorEl={anchorEl}\n\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        >\n          <div class = \"popover-class\">\n          <h2>My Education</h2>\n          <h4>Bachelor of Computing Honours (BCmpH) @ Queen's University</h4>\n       \n          </div>\n      </Popover>\n\n      <Popover\n        id={id}\n        style={popoverStyle}\n        open={open3}\n        //anchorEl={anchorEl}\n\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        >\n          <div class = \"popover-class\">\n          <h2>My Personal Projects</h2>\n          <hr></hr>\n          <h4>Software Developer @ Queen's Media & Technology</h4>\n       \n          </div>\n      </Popover>\n    </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}